apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: obsidiandynamics/kafka
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
            - name: KAFKA_LISTENERS
              value: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
            - name: KAFKA_ADVERTISED_LISTENERS
              value: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: DOCKER_INTERNAL
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          ports:
            - containerPort: 9092

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - port: 80
      targetPort: 9091
