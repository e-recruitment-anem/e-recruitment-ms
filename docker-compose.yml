version: "3"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
  cache-net:
    name: cache-net
    driver: bridge

volumes:
  cache:
    driver: local

services:
  cache:
    image: redis
    restart: always
    networks:
      - cache-net
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  e-recruitment-ms-auth:
    container_name: e-recruitment-ms-auth
    image: e-recruitment-ms-auth
    depends_on:
      - "cache"
      - "zookeeper"
      - "kafka"
      - "kafdrop"
    environment:
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_SENDER_EMAIL: ${SENDGRID_SENDER_EMAIL}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_HOST: ${REDIS_HOSTNAME}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      KAFKA_HOST: kafka:29092
    networks:
      - kafka-net
      - cache-net
    ports:
      - "5000:5000"
    restart: always
